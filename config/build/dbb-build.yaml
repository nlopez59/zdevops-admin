---
#
# Licensed materials - Property of IBM
# 5655-AC5 Copyright IBM Corp. 2024
# All rights reserved
# US Government users restricted rights  -  Use, duplication or
# disclosure restricted by GSA ADP schedule contract with IBM Corp.
#
###############################################################
# Include other build configuration files
###############################################################
version: 1.0.0
include: 
  # IMPORTANT!  Copy and configure Languages.yaml and any other 
  # language configuration files from #DBB_HOME/samples/languages
  # to your $DBB_BUILD directory before executing zBuilder.
  - file: Languages.yaml

#########################################
# Executable build lifecycles
#########################################
lifecycles:

  # build single programs from the command line
  - lifecycle: file
    
    # define the list of tasks to execute during the build lifecycle
    tasks:
      - Start
      - ScannerInit
      - MetadataInit
      - FileAnalysis
      - Languages    # Defined in Languages.yaml
      - Finish

  # build all programs for the application
  - lifecycle: full
    
    # define the list of tasks to execute during the build lifecycle
    tasks:
      - Start
      - ScannerInit
      - MetadataInit
      - FullAnalysis
      - Languages    # Defined in Languages.yaml
      - Finish

  # build only programs impacted by changes for the application
  - lifecycle: impact

    # Optional argument to supply base line references for calculating change files
    # See https://www.ibm.com/docs/en/dbb/3.0?topic=index-task-impactanalysis
    cli:
      usage: dbb build impact [arguments] [options]
      options:
        - longOption: "baselineRef"
          hasArg: true
          description: "Overrides the baseline reference to measure changes from."
    
    # define the list of tasks to execute during the build lifecycle
    tasks:
      - Start
      - ScannerInit
      - MetadataInit
      - ImpactAnalysis
      - Languages    # Defined in Languages.yaml
      - Finish

  # user build for a single program 
  - lifecycle: user
    variables:
      - name: userbuild
        value: true

    # CLI options specific to userbuild
    cli:
      usage: dbb build user [arguments] [options]
      options:
        - longOption: "dependencyFile"
          hasArg: true
          description: "JSON dependency file provided by an IDE used to skip the execution of the DBB scanner."
        - longOption: "errPrefix"
          hasArg: true
          description: "Error prefix for writing error feedback to the Remote Error List view."
        - longOption: "debug"
          hasArg: false
          description: "Enables the debug options on load modules."
    
    # define the list of tasks to execute during the build lifecycle
    tasks:
      - Start
      - ScannerInit
      - FileAnalysis
      - Languages    # Defined in Languages.yaml
      - task: UnitTest
        condition: ${STATUS} == 2 || ${STATUS} == 0 # Skip task on build error or PREVIEW
      - Finish
      
#########################################################################
# Basic task configurations that can be referenced by multiple lifecycles
#########################################################################
tasks:

  # basic build initialization
  - task: Start
  
  # initialize metadata store
  - task: MetadataInit

  # initialize dependency scanners
  - task: ScannerInit
  
  # create simple build list
  - task: FileAnalysis
  
  # create full build list
  - task: FullAnalysis

  # create a build list containing impacted files
  - task: ImpactAnalysis
    
  # build finialization
  - task: Finish
  
  # default empty Languages stage
  # to be replaced by content of Languges.yaml
  - stage: Languages
    tasks:
